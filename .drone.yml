---
kind: pipeline
name: testing
type: vm

pool:
  use: ubuntu

platform:
  os: linux
  arch: amd64

steps:
  - name: vet
    image: golang:1.23
    commands:
      - go vet ./...
    environment:

    volumes:
      - name: gopath
        path: /go

  - name: test
    image: golang:1.23
    commands:
      - go test -cover ./...
    environment:

    volumes:
      - name: gopath
        path: /go

volumes:
  - name: gopath
    temp: {}

trigger:
  ref:
    - refs/heads/main
    - "refs/tags/**"
    - "refs/pull/**"

---
kind: pipeline
type: vm
name: windows-1809

pool:
  use: windows

platform:
  os: windows
  arch: amd64

steps:
  - name: go build
    image: golang:1.23
    environment:
      CGO_ENABLED: 0
    commands:
      - go build -o release/windows/amd64/buildx-ecr.exe ./cmd/drone-buildx-ecr
  - name: build ecr plugin
    image: plugins/docker:20.17.4-windows-1809-amd64
    settings:
      dockerfile: docker/ecr/Dockerfile.windows.amd64.1809
      repo: plugins/buildx-ecr
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      auto_tag: true
      auto_tag_suffix: windows-1809-amd64
      purge: false
    when:
      event: [push, tag]

depends_on:
  - testing

trigger:
  ref:
    - refs/heads/main
    - refs/tags/*
    - "refs/pull/**"

---
kind: pipeline
type: vm
name: windows-ltsc2022

pool:
  use: windows-2022

platform:
  os: windows

steps:
  - name: go build
    image: golang:1.23
    environment:
      CGO_ENABLED: 0
    commands:
      - go build -o release/windows/amd64/buildx-ecr.exe ./cmd/drone-buildx-ecr
  - name: build ecr plugin
    image: plugins/docker
    settings:
      dockerfile: docker/ecr/Dockerfile.windows.amd64.ltsc2022
      repo: plugins/buildx-ecr
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      auto_tag: true
      auto_tag_suffix: windows-ltsc2022-amd64
      purge: false
    when:
      event: [push, tag]

depends_on:
  - testing

trigger:
  ref:
    - refs/heads/main
    - refs/tags/*
    - "refs/pull/**"

---
kind: pipeline
name: linux-amd64-ecr
type: vm

pool:
  use: ubuntu

platform:
  os: linux
  arch: amd64

steps:
  - name: build-push
    image: golang:1.23
    commands:
      - 'go build -v -ldflags "-X main.build=${DRONE_BUILD_NUMBER}" -a -tags netgo -o release/linux/amd64/buildx-ecr ./cmd/drone-buildx-ecr'
    environment:
      CGO_ENABLED: 0
    when:
      event:
        exclude:
          - tag
  - name: build-tag
    image: golang:1.23
    commands:
      - 'go build -v -ldflags "-X main.version=${DRONE_TAG##v} -X main.build=${DRONE_BUILD_NUMBER}" -a -tags netgo -o release/linux/amd64/buildx-ecr ./cmd/drone-buildx-ecr'
    environment:
      CGO_ENABLED: 0
    when:
      event:
        - tag
  - name: publish
    image: plugins/docker:18
    settings:
      auto_tag: true
      auto_tag_suffix: linux-amd64
      daemon_off: false
      dockerfile: docker/ecr/Dockerfile.linux.amd64
      password:
        from_secret: docker_password
      repo: plugins/buildx-ecr
      username:
        from_secret: docker_username
    when:
      event:
        exclude:
          - pull_request

trigger:
  ref:
    - refs/heads/main
    - "refs/tags/**"
    - "refs/pull/**"

depends_on:
  - testing

---
kind: pipeline
name: linux-arm64-ecr
type: vm

pool:
  use: ubuntu_arm64

platform:
  os: linux
  arch: arm64

steps:
  - name: build-push
    image: golang:1.23
    commands:
      - 'go build -v -ldflags "-X main.build=${DRONE_BUILD_NUMBER}" -a -tags netgo -o release/linux/arm64/buildx-ecr ./cmd/drone-buildx-ecr'
    environment:
      CGO_ENABLED: 0
    when:
      event:
        exclude:
          - tag

  - name: build-tag
    image: golang:1.23
    commands:
      - 'go build -v -ldflags "-X main.version=${DRONE_TAG##v} -X main.build=${DRONE_BUILD_NUMBER}" -a -tags netgo -o release/linux/arm64/buildx-ecr ./cmd/drone-buildx-ecr'
    environment:
      CGO_ENABLED: 0
    when:
      event:
        - tag

  - name: publish
    image: plugins/docker:18
    settings:
      auto_tag: true
      auto_tag_suffix: linux-arm64
      daemon_off: false
      dockerfile: docker/ecr/Dockerfile.linux.arm64
      password:
        from_secret: docker_password
      repo: plugins/buildx-ecr
      username:
        from_secret: docker_username
    when:
      event:
        exclude:
          - pull_request

trigger:
  ref:
    - refs/heads/main
    - "refs/tags/**"
    - "refs/pull/**"

depends_on:
  - testing

---
kind: pipeline
name: notifications-ecr
type: vm

pool:
  use: ubuntu

platform:
  os: linux
  arch: amd64

steps:
  - name: manifest
    image: plugins/manifest
    settings:
      ignore_missing: true
      password:
        from_secret: docker_password
      spec: docker/ecr/manifest.tmpl
      username:
        from_secret: docker_username

trigger:
  ref:
    - refs/heads/main
    - "refs/tags/**"

depends_on:
  - windows-1809
  - windows-ltsc2022
  - linux-amd64-ecr
  - linux-arm64-ecr

---

kind: pipeline
name: release-binaries
type: vm

pool:
  use: ubuntu

steps:
  - name: build
    pull: always
    image: golang:1.23
    commands:
      - GOOS=linux   GOARCH=amd64   go build -ldflags "-s -w" -a -tags netgo -o release/drone-buildx-ecr-linux-amd64 ./cmd/drone-buildx-ecr
      - GOOS=linux   GOARCH=arm64   go build -ldflags "-s -w" -a -tags netgo -o release/drone-buildx-ecr-linux-arm64 ./cmd/drone-buildx-ecr
      - GOOS=darwin  GOARCH=amd64   go build -ldflags "-s -w" -a -tags netgo -o release/drone-buildx-ecr-darwin-amd64 ./cmd/drone-buildx-ecr
      - GOOS=darwin  GOARCH=arm64   go build -ldflags "-s -w" -a -tags netgo -o release/drone-buildx-ecr-darwin-arm64 ./cmd/drone-buildx-ecr
      - GOOS=windows GOARCH=amd64   go build -ldflags "-s -w" -a -tags netgo -o release/drone-buildx-ecr-windows-amd64 ./cmd/drone-buildx-ecr

    environment:
      CGO_ENABLED: 0
      GO111MODULE: on

  - name: zstd-compress
    commands:
      - sudo apt-get update -y
      - sudo apt-get install -y zstd
      - zstd release/drone-buildx-ecr-linux-amd64
      - zstd release/drone-buildx-ecr-linux-arm64
      - zstd release/drone-buildx-ecr-darwin-arm64
      - zstd release/drone-buildx-ecr-darwin-amd64
      - zstd release/drone-buildx-ecr-windows-amd64

  - name: release
    image: plugins/github-release
    settings:
      files:
        - release/drone-buildx-ecr-linux-amd64.zst
        - release/drone-buildx-ecr-linux-arm64.zst
        - release/drone-buildx-ecr-darwin-arm64.zst
        - release/drone-buildx-ecr-darwin-amd64.zst
        - release/drone-buildx-ecr-windows-amd64.zst
      api_key:
        from_secret: cireporunner_github_token
    when:
      event:
        - tag
depends_on:
  - testing
